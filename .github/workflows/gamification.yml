name: Asignar Puntos por Documentación
on:
  pull_request:
    types: [closed]

jobs:
  assign_points:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Configurar Git para commits
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"

    - name: Actualizar tabla de puntos
      run: |
        POINTS_FILE="scoreboard.md"
        NEW_POINTS=100
        
        # Verificar si el archivo scoreboard.md existe
        if [[ -f "$POINTS_FILE" ]]; then
          # Crear un archivo temporal para construir la nueva tabla
          TEMP_FILE=$(mktemp)
          
          # Leer la tabla existente línea por línea
          while IFS= read -r line; do
            if echo "$line" | grep -q "$GITHUB_ACTOR"; then
              # Si el usuario ya existe, extraer los puntos actuales, sumar los nuevos, y actualizar nivel e insignia
              CURRENT_POINTS=$(echo "$line" | awk '{print $3}')
              UPDATED_POINTS=$((CURRENT_POINTS + NEW_POINTS))
              
              # Asignar el nivel e insignia según los puntos
              if [[ $UPDATED_POINTS -ge 1500 ]]; then
                LEVEL="Documentador Retador"
                BADGE="![Insignia Retador](insignias/Insignia-Retador.png)"
              elif [[ $UPDATED_POINTS -ge 1200 ]]; then
                LEVEL="Documentador Maestro"
                BADGE="![Insignia Maestro](insignias/Insignia-Maestro.png)"
              elif [[ $UPDATED_POINTS -ge 1000 ]]; then
                LEVEL="Documentador Intermedio Avanzado"
                BADGE="![Insignia Intermedio Avanzado](insignias/Insignia-IntermedioAvanzado.png)"
              elif [[ $UPDATED_POINTS -ge 800 ]]; then
                LEVEL="Documentador Intermedio"
                BADGE="![Insignia Intermedio](insignias/Insignia-Intermedio.png)"
              elif [[ $UPDATED_POINTS -ge 500 ]]; then
                LEVEL="Documentador Principiante"
                BADGE="![Insignia Principiante](insignias/Insignia-Principiante.png)"
              else
                LEVEL="Documentador Novato"
                BADGE="![Insignia Novato](insignias/Insignia-Novato.png)"
              fi
              
              # Actualizar la línea del desarrollador con los nuevos puntos, nivel e insignia
              echo "| $GITHUB_ACTOR | $UPDATED_POINTS | $LEVEL | $BADGE |" >> "$TEMP_FILE"
            else
              # Mantener las otras líneas intactas
              echo "$line" >> "$TEMP_FILE"
            fi
          done < "$POINTS_FILE"
          
          # Reemplazar el archivo original con el nuevo archivo actualizado
          mv "$TEMP_FILE" "$POINTS_FILE"
        else
          # Si el archivo no existe, crearlo y agregar la tabla inicial
          echo "# Tabla de Puntuación" > "$POINTS_FILE"
          echo "| Desarrollador      | Puntos  | Nivel               | Insignia                       |" >> "$POINTS_FILE"
          echo "|--------------------|---------|---------------------|--------------------------------|" >> "$POINTS_FILE"
          echo "| $GITHUB_ACTOR | $NEW_POINTS | Documentador Novato | ![Insignia Novato](insignias/Insignia-Novato.png) |" >> "$POINTS_FILE"
        fi

    - name: Commit y Push de la tabla de puntuación
      run: |
        git add scoreboard.md
        git commit -m "Actualizar tabla de puntos para $GITHUB_ACTOR"
        git push origin HEAD:main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
